{
	"Introduction":
		[
			[
				"The Rubik's Cube is very misunderstood. Most people say things like, \"I just peel the stickers off,\" \"I can solve 5 sides,\" and \"Wow, you must be really smart if you can solve the Rubix (incorrect spelling) Cube!\" These Rubik's Cube) say to sound smart.\n\nYou're probably wondering why this matters. It doesn't. Just don't go around doing these things if you don't know what you're talking about.\n\nAnyway, what is the Rubik's Cube? It's a simple puzzle and configured in many different ways. When it is put into a \"scrambled\" state, it can be extremely difficult, nearly impossible, to solve without any guidance. Luckily, many methods have been created to make this process easier, and now pretty much anyone can solve it, including you!\n\nI'll be going over a method for beginners that is easy to understand, so if you're scared or think you're not capable or \"not smart enough\", don't worry! I even taught my dog how to do it*!\n\nIf you're excited to solve your first Rubik's Cube, that's great! But before we get into how to solve it, you'll have to know a few important things.",
				[
					"*I don't have a dog, nor did I teach him how to solve the Rubik's Cube", 
					[
						null, 670, 15, null
					]
				]
			],
			[
				"First, the Rubik's Cube is solved in layers, not sides. Surprisingly, trying to solve the cube by getting one side at a time makes it much more difficult. This is what a solved side versus a solved layer looks like:",
				[
					"Side",
					[
						"halfWidth -200", 220, 36, "centerAlign" 
					]
				],
				[
					"solved_side.png",
					[
						"halfWidth -200", 320, 180, 180, null
					]
				],
				[
					"Layer",
					[
						"halfWidth +200", 220, 36, "centerAlign" 
					]
				],
				[
					"solved_layer.png",
					[
						"halfWidth +200", 320, 180, 180, null
					]
				],
				[
					"In the solved side, the entire face is yellow, but the parts along its edge don't match up. In the solved layer, the difference is that the colors along the edge do line up.\n\nThat may have been a bit confusing, but don't worry! This idea of solving in layers is built into this tutorial, so it will happen naturally. Also, here's some quick nomenclature that I'll be using to identify certain pieces:",
					[
						null, 430, null, null, null, null
					]
				],
				[
					"Center Pieces",
					[
						"halfWidth -300", 620, 30, "centerAlign" 
					]
				],
				[
					"center_pieces.png",
					[
						"halfWidth -300", 680, null, null, null
					]
				],
				[
					"Edge Pieces",
					[
						"halfWidth", 620, 30, "centerAlign" 
					]
				],
				[
					"edge_pieces.png",
					[
						"halfWidth", 680, null, null, null
					]
				],
				[
					"Corner Pieces",
					[
						"halfWidth +300", 620, 30, "centerAlign" 
					]
				],
				[
					"corner_pieces.png",
					[
						"halfWidth +300", 680, null, null, null
					]
				]
			],
			[
				"Lastly, you need to learn about turning notation. Each of the six sides has a letter representing it, and indicates a turn to that side. It should be turned clockwise from the perspective of that side. Note that while doing the following turns, the leftmost of the three sides shown should point towards you.",
				[
					"front_side.png",
					[
						"halfWidth -500", 270, null, null, null
					]
				],
				[
					"F",
					[
						"halfWidth -500", 355, 36, "centerAlign" 
					]
				],
				[
					"back_side.png",
					[
						"halfWidth -300", 270, null, null, null
					]
				],
				[
					"B",
					[
						"halfWidth -300", 355, 36, "centerAlign" 
					]
				],
				[
					"up_side.png",
					[
						"halfWidth -100", 270, null, null, null
					]
				],
				[
					"U",
					[
						"halfWidth -100", 355, 36, "centerAlign" 
					]
				],
				[
					"down_side.png",
					[
						"halfWidth +100", 270, null, null, null
					]
				],
				[
					"D",
					[
						"halfWidth +100", 355, 36, "centerAlign" 
					]
				],
				[
					"left_side.png",
					[
						"halfWidth +300", 270, null, null, null
					]
				],
				[
					"L",
					[
						"halfWidth +300", 355, 36, "centerAlign" 
					]
				],
				[
					"right_side.png",
					[
						"halfWidth +500", 270, null, null, null
					]
				],
				[
					"R",
					[
						"halfWidth +500", 355, 36, "centerAlign" 
					]
				],
				[
					"These letters represent the sides: Front, Back, Up, Down, Left, Right. These can be reversed by an apostrophe (known as a \"prime\" symbol) following it, which makes it turn counter-clockwise. The number 2 following it means to turn the side twice.\n\nFor example, B' means to turn the back side (second image) counter-clockwise. 2R means to turn the right side (last image) twice.\n\nAnd that's all you really need to know about for now. So buckle up and get your cube out, because this is going to be a fun, easy, and relaxing experience. Also, did I forget to mention that there are more than 43 quintillion possible configurations of the Rubik's Cube? OOPS...",
					[
						null, 390, null, null, null, null
					]
				]
			]
		],
	"The Cross":
		[
			[
				[
					"The first step to solving the Rubik's Cube is by making a white cross-shaped pattern.\n\nThe pattern, as shown in the photo, is made up of a white center piece, and four white edge pieces (edge pieces with the white and another color). But one very important thing to notice is that the other color on the white edge pieces line up with the center pieces on the other sides. ",
					[
						null, null, "width -400", null, null, null
					]
				],
				[
					"the_cross.png",
					[
						"width -200", 200, 200, 200, null
					]
				],
				[
					"To accomplish this, you will mostly have to use your intuition. Luckily, I can give you a bit of help to make this easier. Instead of putting the white edge pieces directly into position, you can line them up around the yellow center piece, opposite of the white one. This pattern is known as the \"daisy\", shown on the left.\n\nAs you can see, the white edge pieces don't have to be lined up with the adjacent center pieces. This pattern is a bit easier to make without that restriction.",
					[
						300, 316, "width -400", null, null, null
					]
				],
				[
					"the_daisy.png",
					[
						180, 410, 200, 200, null
					]
				],
				[
					"Once you get the white edge pieces lined up, all you have to do is rotate them into place. To do this, turn the daisy around until one of its white edge pieces' colored part lines up with the color of the adjacent center piece. Then, turn that side twice! Repeat this for all other three edge pieces.\n\nIf you've done everything right, you should have completed The Cross!",
					[
						null, 540, null, null, null, null
					]
				]
			]
		],
	"The First Layer":
		[
			[
				"The next step is filling out a layer. To do this, we just need to insert white corner pieces between parts of The Cross. First, make sure you're holding the cube so that The Cross is pointing down. This might be a bit confusing at first, but it will make things easier.",
				[
					"Then, find a white corner piece. It should have white and two other colors on it. The end goal is shown on the right; notice how it's lined up with the colors around it. If the corner piece you chose is next to the yellow center piece, you can skim through this next part. If it's stuck next to the white center piece, follow along with the next steps.",
					[
						null, 230, "width -350", null, null, null
					]
				],
				[
					"white_corner_end.png",
					[
						"width -160", 290, 140, 140, null
					]
				],
				[
					"first_layer_corner_up.png",
					[
						160, 445, 140, 140, null
					]
				],
				[
					"The corner piece should be in in the position as shown on the left. Make sure you hold your cube as shown on the right, so that the corner piece is on the bottom right, and execute the following algorigthm: [R U R' U']. This algorithm will orient the corner piece next to the yellow center piece. Get used to doing this algorithm, as it comes up a lot.",
					[
						250, 375, "width -500", null, null, null
					]
				],
				[
					"first_layer_corner_down.png",
					[
						"width -160", 445, 140, 140, null
					]
				],
				[
					"corner_piece_out.png",
					[
						160, 620, 140, 140, null
					]
				],
				[
					"The corner piece should now be next to the yellow center piece as shown. Lastly, we just need to get the piece into its final position. Start by rotating the top (yellow) side until the two non-white colors on the corner piece match up with the two colors of the center pieces below it, as shown in the photo to the left. As you can see in this example, the orange and blue of the corner piece matches with the orange and blue center pieces below.",
					[
						250, 550, "width -350", null, null, null
					]
				]
			],
			[
				"All that's left to do now for the corner piece is to get it into the correct orientation! Repeat the algorithm: [R U R' U'] until the white part of the corner piece matches with the white pieces around it. Notice that this algorithm is the same one we used to take the corner piece out.\n\nNow that we have inserted one corner piece, we just need to repeat this process for the three other white corner pieces! Here's an example of what the cube might look like after each step:",
				[
					"roadmap_logo.png",
					[
						"halfWidth -350", 400, 160, 160, null
					]
				],
				[
					"roadmap_logo.png",
					[
						"halfWidth", 400, 160, 160, null
					]
				],
				[
					"roadmap_logo.png",
					[
						"halfWidth +350", 400, 160, 160, null
					]
				],
				[
					"roadmap_logo.png",
					[
						"halfWidth -180", 560, 160, 160, null
					]
				],
				[
					"roadmap_logo.png",
					[
						"halfWidth +180", 560, 160, 160, null
					]
				],
				[
					"Hopefully, your cube looks like the last image. If it does, you've solved the First Layer!",
					[
						null, 660, null, null, null, null
					]
				]
			]
		],
	"The Second Layer":
		[
		],
	"The Cross 2.0":
		[
		],
	"The Corner Fix":
		[
		],
	"The Solve":
		[
		],
	"Conclusion":
		[
		],
	"defaultSettings":
		{
			"textDefault":
			[
				100, 120, "width -200", "height -100", 22, "leftAlign"
			],
			"imageDefault":
			[
				0, 0, 100, 100, "centerAlign"
			]
		}
}